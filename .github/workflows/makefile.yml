name: Auto Kernel Builder
on:
  push:
    branches: [main, ksu]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [main, ksu]
      fail-fast: false
    timeout-minutes: 45
    env:
      ARCH: arm64
      SUBARCH: arm
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_MAXSIZE: 20G

    steps:
    - name: Checkout ${{ matrix.branch }} branch
      uses: actions/checkout@v4
      with:
        ref: ${{ matrix.branch }}

    - name: Install Dependencies & toolchain
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential clang lld libssl-dev libelf-dev flex bison bc ccache \
          curl git git-lfs gnupg gperf imagemagick liblz4-tool libncurses6 \
          libncurses5-dev libsdl1.2-dev libxml2 libxml2-utils lzop pngcrush rsync \
          schedtool squashfs-tools xsltproc zip zlib1g-dev gcc-aarch64-linux-gnu

    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: Configure ccache
      run: |
        mkdir -p $CCACHE_DIR
        echo "max_size = $CCACHE_MAXSIZE" > $CCACHE_DIR/ccache.conf
        sudo chmod -R 777 $CCACHE_DIR

    - name: Restore ccache
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: kernel-ccache-${{ runner.os }}-${{ env.ARCH }}-${{ matrix.branch }}
        restore-keys: |
          kernel-ccache-${{ runner.os }}-${{ env.ARCH }}-

    - name: Initialize KernelSU submodule (if ksu branch)
      if: matrix.branch == 'ksu'
      run: |
        git submodule init
        git submodule update

    - name: Build Kernel (ARM64 Cross-Compile)
      run: |
        make -j$(nproc) O=out \
          CC="ccache clang" \
          LD=ld.lld \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_COMPAT=aarch64-linux-gnueabi- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
          LLVM_IAS=1 \
          KCFLAGS="--target=aarch64-linux-gnu \
                   -Wno-unused-but-set-variable \
                   -Wno-implicit-function-declaration \
                   -Wno-unused-variable -Wno-unused-function -Wno-unused-label" \
          evergo_defconfig

        make -j$(nproc) O=out \
          CC="ccache clang" \
          LD=ld.lld \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_COMPAT=aarch64-linux-gnueabi- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
          LLVM_IAS=1 \
          KCFLAGS="--target=aarch64-linux-gnu \
                   -Wno-unused-but-set-variable \
                   -Wno-implicit-function-declaration \
                   -Wno-unused-variable -Wno-unused-function -Wno-unused-label"

    - name: Package Kernel
      run: |
        git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git AnyKernel3
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        cd AnyKernel3
        zip -r ../AnyKernel3-${{ matrix.branch }}.zip *
        cd ..

    - name: Upload AnyKernel3.zip
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-${{ matrix.branch }}.zip
        path: AnyKernel3-${{ matrix.branch }}.zip

    - name: Save ccache
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: kernel-ccache-${{ runner.os }}-${{ env.ARCH }}-${{ matrix.branch }}-${{ github.run_id }}
